// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: grpc/chitchat.proto

package chitchat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_grpc_chitchat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SimpleMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleMessage) Reset() {
	*x = SimpleMessage{}
	mi := &file_grpc_chitchat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleMessage) ProtoMessage() {}

func (x *SimpleMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleMessage.ProtoReflect.Descriptor instead.
func (*SimpleMessage) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{1}
}

func (x *SimpleMessage) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SimpleMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Msg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	UnixTime      int64                  `protobuf:"varint,2,opt,name=UnixTime,proto3" json:"UnixTime,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	LogicalTime   int32                  `protobuf:"varint,5,opt,name=LogicalTime,proto3" json:"LogicalTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Msg) Reset() {
	*x = Msg{}
	mi := &file_grpc_chitchat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{2}
}

func (x *Msg) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Msg) GetUnixTime() int64 {
	if x != nil {
		return x.UnixTime
	}
	return 0
}

func (x *Msg) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Msg) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Msg) GetLogicalTime() int32 {
	if x != nil {
		return x.LogicalTime
	}
	return 0
}

type ConnectRespond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    *ChatRespond           `protobuf:"bytes,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message       *Msg                   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRespond) Reset() {
	*x = ConnectRespond{}
	mi := &file_grpc_chitchat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRespond) ProtoMessage() {}

func (x *ConnectRespond) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRespond.ProtoReflect.Descriptor instead.
func (*ConnectRespond) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectRespond) GetStatusCode() *ChatRespond {
	if x != nil {
		return x.StatusCode
	}
	return nil
}

func (x *ConnectRespond) GetMessage() *Msg {
	if x != nil {
		return x.Message
	}
	return nil
}

// Use HTTP response status code
type ChatRespond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Context       string                 `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatRespond) Reset() {
	*x = ChatRespond{}
	mi := &file_grpc_chitchat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRespond) ProtoMessage() {}

func (x *ChatRespond) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRespond.ProtoReflect.Descriptor instead.
func (*ChatRespond) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{4}
}

func (x *ChatRespond) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ChatRespond) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

var File_grpc_chitchat_proto protoreflect.FileDescriptor

const file_grpc_chitchat_proto_rawDesc = "" +
	"\n" +
	"\x13grpc/chitchat.proto\x12\bchitchat\"\x1a\n" +
	"\x04User\x12\x12\n" +
	"\x04Uuid\x18\x01 \x01(\tR\x04Uuid\"M\n" +
	"\rSimpleMessage\x12\"\n" +
	"\x04User\x18\x01 \x01(\v2\x0e.chitchat.UserR\x04User\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\"\x97\x01\n" +
	"\x03Msg\x12\"\n" +
	"\x04User\x18\x01 \x01(\v2\x0e.chitchat.UserR\x04User\x12\x1a\n" +
	"\bUnixTime\x18\x02 \x01(\x03R\bUnixTime\x12\x18\n" +
	"\aMessage\x18\x03 \x01(\tR\aMessage\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\x12 \n" +
	"\vLogicalTime\x18\x05 \x01(\x05R\vLogicalTime\"p\n" +
	"\x0eConnectRespond\x125\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\v2\x15.chitchat.ChatRespondR\n" +
	"StatusCode\x12'\n" +
	"\aMessage\x18\x02 \x01(\v2\r.chitchat.MsgR\aMessage\"G\n" +
	"\vChatRespond\x12\x1e\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x05R\n" +
	"StatusCode\x12\x18\n" +
	"\acontext\x18\x02 \x01(\tR\acontext2\xc7\x01\n" +
	"\x04chat\x12>\n" +
	"\aConnect\x12\x17.chitchat.SimpleMessage\x1a\x18.chitchat.ConnectRespond0\x01\x12A\n" +
	"\vOnGoingChat\x12\x17.chitchat.SimpleMessage\x1a\x15.chitchat.ChatRespond(\x010\x01\x12<\n" +
	"\n" +
	"Disconnect\x12\x17.chitchat.SimpleMessage\x1a\x15.chitchat.ChatRespondB0Z.github.com/Mojjedrengen/ChitChat/grpc/chitchatb\x06proto3"

var (
	file_grpc_chitchat_proto_rawDescOnce sync.Once
	file_grpc_chitchat_proto_rawDescData []byte
)

func file_grpc_chitchat_proto_rawDescGZIP() []byte {
	file_grpc_chitchat_proto_rawDescOnce.Do(func() {
		file_grpc_chitchat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grpc_chitchat_proto_rawDesc), len(file_grpc_chitchat_proto_rawDesc)))
	})
	return file_grpc_chitchat_proto_rawDescData
}

var file_grpc_chitchat_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_grpc_chitchat_proto_goTypes = []any{
	(*User)(nil),           // 0: chitchat.User
	(*SimpleMessage)(nil),  // 1: chitchat.SimpleMessage
	(*Msg)(nil),            // 2: chitchat.Msg
	(*ConnectRespond)(nil), // 3: chitchat.ConnectRespond
	(*ChatRespond)(nil),    // 4: chitchat.ChatRespond
}
var file_grpc_chitchat_proto_depIdxs = []int32{
	0, // 0: chitchat.SimpleMessage.User:type_name -> chitchat.User
	0, // 1: chitchat.Msg.User:type_name -> chitchat.User
	4, // 2: chitchat.ConnectRespond.StatusCode:type_name -> chitchat.ChatRespond
	2, // 3: chitchat.ConnectRespond.Message:type_name -> chitchat.Msg
	1, // 4: chitchat.chat.Connect:input_type -> chitchat.SimpleMessage
	1, // 5: chitchat.chat.OnGoingChat:input_type -> chitchat.SimpleMessage
	1, // 6: chitchat.chat.Disconnect:input_type -> chitchat.SimpleMessage
	3, // 7: chitchat.chat.Connect:output_type -> chitchat.ConnectRespond
	4, // 8: chitchat.chat.OnGoingChat:output_type -> chitchat.ChatRespond
	4, // 9: chitchat.chat.Disconnect:output_type -> chitchat.ChatRespond
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_grpc_chitchat_proto_init() }
func file_grpc_chitchat_proto_init() {
	if File_grpc_chitchat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grpc_chitchat_proto_rawDesc), len(file_grpc_chitchat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_chitchat_proto_goTypes,
		DependencyIndexes: file_grpc_chitchat_proto_depIdxs,
		MessageInfos:      file_grpc_chitchat_proto_msgTypes,
	}.Build()
	File_grpc_chitchat_proto = out.File
	file_grpc_chitchat_proto_goTypes = nil
	file_grpc_chitchat_proto_depIdxs = nil
}
